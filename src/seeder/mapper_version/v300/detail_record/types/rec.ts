import { inputTypeEnum } from '../../../../../enum/input_type';
import { versionAvailable } from '../../../../../enum/version';
import { MapperSeeder } from '../../../../../model/mapper';

const group_name = 'REC';
const version = versionAvailable.v300;

export const REC: MapperSeeder[] = [
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 1,
    size: 19,
    end_char: 20,
    field: 'record_prefix',
    description: 'Record Prefix',
    is_required: true,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Date,
    tag: 'free_text_date',
    start_char: 20,
    size: 8,
    end_char: 28,
    field: 'release_date',
    description: 'Release Date',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Time,
    tag: 'free_text',
    start_char: 28,
    size: 6,
    end_char: 36,
    field: 'recording_duration',
    description: 'Recording Duration',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Standard,
    tag: 'free_text',
    start_char: 36,
    size: 12,
    end_char: 48,
    field: 'isrc',
    description: 'ISRC',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 46,
    size: 60,
    end_char: 106,
    field: 'recording_title',
    description: 'Recording Title',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 106,
    size: 60,
    end_char: 166,
    field: 'version_title',
    description: 'Version Title',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 166,
    size: 60,
    end_char: 226,
    field: 'display_artist',
    description: 'Display Artist',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Standard,
    tag: 'free_text',
    start_char: 226,
    size: 11,
    end_char: 237,
    field: 'display_artist_ipi_name_number',
    description: 'Display Artist IPI Name Number',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Standard,
    tag: 'free_text',
    start_char: 237,
    size: 16,
    end_char: 253,
    field: 'international_standard_name_identifier',
    description: 'International Standard Name Identifier',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 253,
    size: 60,
    end_char: 313,
    field: 'record_kabel',
    description: 'Record Label',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Lookup,
    tag: 'free_text',
    start_char: 313,
    size: 20,
    end_char: 333,
    field: 'isrc_validity',
    description: 'ISRC Validity',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 333,
    size: 14,
    end_char: 347,
    field: 'submitter_recording_identifier',
    description: 'Submitter Recording Identifier',
    is_required: false,
  },
];
