import { inputTypeEnum } from '../../../../../enum/input_type';
import { versionAvailable } from '../../../../../enum/version';
import { MapperSeeder } from '../../../../../model/mapper';

const group_name = 'MSG';
const version = versionAvailable.v300;

export const MSG: MapperSeeder[] = [
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 1,
    size: 19,
    end_char: 20,
    field: 'record_prefix',
    description: 'Record Prefix',
    is_required: true,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Lookup,
    tag: 'free_text',
    start_char: 20,
    size: 1,
    end_char: 21,
    field: 'message_type',
    description: 'Message Type',
    is_required: true,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Numeric,
    tag: 'free_text',
    start_char: 21,
    size: 8,
    end_char: 29,
    field: 'original_record_sequence_number',
    description: 'Original Record Sequence Number',
    is_required: true,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 29,
    size: 3,
    end_char: 32,
    field: 'record_type',
    description: 'Record Type',
    is_required: true,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Lookup,
    tag: 'free_text',
    start_char: 32,
    size: 1,
    end_char: 33,
    field: 'message_level',
    description: 'Message Level',
    is_required: true,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 33,
    size: 3,
    end_char: 36,
    field: 'validation_number',
    description: 'Validation Number',
    is_required: true,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 36,
    size: 150,
    end_char: 186,
    field: 'message_text',
    description: 'Message Text',
    is_required: true,
  },
];
