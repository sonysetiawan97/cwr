import { inputTypeEnum } from '../../../../../enum/input_type';
import { versionAvailable } from '../../../../../enum/version';
import { MapperSeeder } from '../../../../../model/mapper';

const group_name = 'ORN';
const version = versionAvailable.v300;

export const ORN: Array<MapperSeeder> = [
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 1,
    size: 19,
    end_char: 20,
    field: 'record_prefix',
    description: 'Record Prefix',
    is_required: true,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Lookup,
    tag: 'free_text',
    start_char: 20,
    size: 3,
    end_char: 23,
    field: 'intended_purpose',
    description: 'Intended Purpose',
    is_required: true,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 23,
    size: 15,
    end_char: 38,
    field: 'cd_identifier',
    description: 'CD Identifier',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Numeric,
    tag: 'free_text',
    start_char: 38,
    size: 4,
    end_char: 42,
    field: 'cut_number',
    description: 'Cut Number',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 42,
    size: 60,
    end_char: 102,
    field: 'library',
    description: 'Library',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 102,
    size: 60,
    end_char: 162,
    field: 'production_title',
    description: 'Production Title',
    is_required: true,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 162,
    size: 1,
    end_char: 163,
    field: 'bltvr',
    description: 'BLTVR',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 163,
    size: 12,
    end_char: 175,
    field: 'production_number',
    description: 'Production Number',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 175,
    size: 60,
    end_char: 235,
    field: 'episode_title',
    description: 'Episode Title',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 235,
    size: 20,
    end_char: 255,
    field: 'episode_number',
    description: 'Episode Number',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Numeric,
    tag: 'free_text',
    start_char: 255,
    size: 4,
    end_char: 259,
    field: 'year_of_production',
    description: 'Year of Production',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 259,
    size: 0,
    end_char: 259,
    field: 'avi_key',
    description: 'AVI Key',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Lookup,
    tag: 'free_text',
    start_char: 259,
    size: 4,
    end_char: 263,
    field: 'avi_society_code',
    description: 'AVI Society Code',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 263,
    size: 15,
    end_char: 278,
    field: 'audio_visual_number',
    description: 'Audio-Visual Number',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 278,
    size: 0,
    end_char: 278,
    field: 'v_isan',
    description: 'V-ISAN',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Standard,
    tag: 'free_text',
    start_char: 278,
    size: 12,
    end_char: 290,
    field: 'isan',
    description: 'ISAN',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Standard,
    tag: 'free_text',
    start_char: 290,
    size: 4,
    end_char: 294,
    field: 'episode',
    description: 'Episode',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Standard,
    tag: 'free_text',
    start_char: 294,
    size: 1,
    end_char: 295,
    field: 'check_digit_1',
    description: 'Check Digit 1',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Standard,
    tag: 'free_text',
    start_char: 295,
    size: 8,
    end_char: 303,
    field: 'Version',
    description: 'Version',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Standard,
    tag: 'free_text',
    start_char: 303,
    size: 1,
    end_char: 304,
    field: 'check_digit_2',
    description: 'Check Digit 2',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Standard,
    tag: 'free_text',
    start_char: 304,
    size: 0,
    end_char: 304,
    field: 'eidr',
    description: 'EIDR',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Standard,
    tag: 'free_text',
    start_char: 304,
    size: 20,
    end_char: 324,
    field: 'eidr',
    description: 'EIDR',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Standard,
    tag: 'free_text',
    start_char: 324,
    size: 1,
    end_char: 325,
    field: 'check_digit',
    description: 'Check Digit',
    is_required: false,
  },
  {
    version,
    group_name,
    input_type: inputTypeEnum.Alpha,
    tag: 'free_text',
    start_char: 325,
    size: 40,
    end_char: 365,
    field: 'version',
    description: 'Version Name',
    is_required: false,
  },
];
